{
  "dependencies": [
    "@radix-ui/react-popover"
  ],
  "doc": {
    "description": "Displays rich content in a portal, triggered by a button.",
    "links": {
      "doc": "https://ui.shadcn.com/docs/components/popover"
    }
  },
  "files": [
    {
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport { cn, withRef } from '@udecode/cn';\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nexport const Popover = PopoverPrimitive.Root;\n\nexport const PopoverTrigger = PopoverPrimitive.Trigger;\n\nexport const PopoverAnchor = PopoverPrimitive.Anchor;\n\nexport const popoverVariants = cva(\n  'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none print:hidden',\n  {\n    defaultVariants: {\n      animate: true,\n    },\n    variants: {\n      animate: {\n        true: 'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n      },\n    },\n  }\n);\n\nexport const PopoverContent = withRef<\n  typeof PopoverPrimitive.Content,\n  VariantProps<typeof popoverVariants>\n>(({ align = 'center', animate, className, sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      className={cn(popoverVariants({ animate }), className)}\n      align={align}\n      sideOffset={sideOffset}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\n",
      "path": "plate-ui/popover.tsx",
      "target": "components/plate-ui/popover.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "popover",
  "registryDependencies": [],
  "type": "registry:ui"
}