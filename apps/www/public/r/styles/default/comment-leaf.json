{
  "dependencies": [
    "@udecode/plate-comments"
  ],
  "doc": {
    "description": "A text component for displaying comments with visual indicators.",
    "docs": [
      {
        "route": "/docs/comments"
      },
      {
        "route": "https://pro.platejs.org/docs/components/comment-leaf"
      }
    ],
    "examples": [
      "comments-demo",
      "comments-pro"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport type { TCommentText } from '@udecode/plate-comments';\n\nimport { cn } from '@udecode/cn';\nimport {\n  useCommentLeaf,\n  useCommentLeafState,\n} from '@udecode/plate-comments/react';\nimport { type PlateLeafProps, PlateLeaf } from '@udecode/plate-common/react';\n\nexport function CommentLeaf({\n  className,\n  ...props\n}: PlateLeafProps<TCommentText>) {\n  const { children, leaf, nodeProps } = props;\n\n  const state = useCommentLeafState({ leaf });\n  const { props: rootProps } = useCommentLeaf(state);\n\n  if (!state.commentCount) return <>{children}</>;\n\n  let aboveChildren = <>{children}</>;\n\n  if (!state.isActive) {\n    for (let i = 1; i < state.commentCount; i++) {\n      aboveChildren = <span className=\"bg-highlight/25\">{aboveChildren}</span>;\n    }\n  }\n\n  return (\n    <PlateLeaf\n      {...props}\n      className={cn(\n        'border-b-2 border-b-highlight/35 hover:bg-highlight/25',\n        state.isActive ? 'bg-highlight/25' : 'bg-highlight/15',\n        className\n      )}\n      nodeProps={{\n        ...rootProps,\n        ...nodeProps,\n      }}\n    >\n      {aboveChildren}\n    </PlateLeaf>\n  );\n}\n",
      "path": "plate-ui/comment-leaf.tsx",
      "target": "components/plate-ui/comment-leaf.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "comment-leaf",
  "registryDependencies": [],
  "type": "registry:ui"
}