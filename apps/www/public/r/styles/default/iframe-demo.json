{
  "files": [
    {
      "content": "'use client';\n\nimport React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Plate } from '@udecode/plate-common/react';\n\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { useCreateEditor } from '@/components/editor/use-create-editor';\nimport { iframeValue } from '@/components/values/iframe-value';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nimport { EditableVoidPlugin } from './editable-voids-demo';\n\nexport function IFrame({ children, ...props }: any) {\n  const [contentRef, setContentRef] = useState<any>(null);\n  const mountNode = contentRef?.contentWindow?.document.body;\n\n  return (\n    <iframe {...props} ref={setContentRef}>\n      {mountNode && createPortal(React.Children.only(children), mountNode)}\n    </iframe>\n  );\n}\n\nexport default function IframeDemo() {\n  const editor = useCreateEditor({\n    plugins: [...editorPlugins, EditableVoidPlugin],\n    value: iframeValue,\n  });\n\n  return (\n    <IFrame className=\"size-full h-[500px]\">\n      <Plate editor={editor}>\n        <EditorContainer>\n          <Editor />\n        </EditorContainer>\n      </Plate>\n    </IFrame>\n  );\n}\n",
      "path": "example/iframe-demo.tsx",
      "target": "components/iframe-demo.tsx",
      "type": "registry:example"
    }
  ],
  "name": "iframe-demo",
  "registryDependencies": [],
  "type": "registry:example"
}