{
  "files": [
    {
      "content": "'use client';\n\nimport React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { BasicElementsPlugin } from '@udecode/plate-basic-elements/react';\nimport { BasicMarksPlugin } from '@udecode/plate-basic-marks/react';\nimport { Plate, usePlateEditor } from '@udecode/plate-common/react';\n\nimport { editableProps } from '@/plate/demo/editableProps';\nimport { PlateUI } from '@/plate/demo/plate-ui';\nimport { iframeValue } from '@/plate/demo/values/iframeValue';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nimport { EditableVoidPlugin } from './editable-voids-demo';\n\nexport function IFrame({ children, ...props }: any) {\n  const [contentRef, setContentRef] = useState<any>(null);\n  const mountNode = contentRef?.contentWindow?.document.body;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/iframe-has-title\n    <iframe {...props} ref={setContentRef}>\n      {mountNode && createPortal(React.Children.only(children), mountNode)}\n    </iframe>\n  );\n}\n\nexport default function IframeDemo() {\n  const editor = usePlateEditor({\n    override: { components: PlateUI },\n    plugins: [BasicElementsPlugin, BasicMarksPlugin, EditableVoidPlugin],\n    value: iframeValue,\n  });\n\n  return (\n    <IFrame className=\"p-10\">\n      <Plate editor={editor}>\n        <EditorContainer>\n          <Editor {...editableProps} />\n        </EditorContainer>\n      </Plate>\n    </IFrame>\n  );\n}\n",
      "path": "example/iframe-demo.tsx",
      "target": "components/iframe-demo.tsx",
      "type": "registry:example"
    }
  ],
  "name": "iframe-demo",
  "registryDependencies": [],
  "type": "registry:example"
}