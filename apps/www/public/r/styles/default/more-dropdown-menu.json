{
  "dependencies": [
    "@radix-ui/react-dropdown-menu",
    "@udecode/plate-basic-marks",
    "@udecode/plate-highlight",
    "@udecode/plate-kbd"
  ],
  "doc": {
    "description": "A menu for additional text formatting options.",
    "docs": [
      {
        "route": "https://pro.platejs.org/docs/components/more-dropdown-menu"
      }
    ],
    "examples": [
      "basic-marks-demo",
      "basic-nodes-pro"
    ]
  },
  "files": [
    {
      "content": "'use client';\nimport React from 'react';\n\nimport type { DropdownMenuProps } from '@radix-ui/react-dropdown-menu';\n\nimport {\n  SubscriptPlugin,\n  SuperscriptPlugin,\n} from '@udecode/plate-basic-marks/react';\nimport { collapseSelection } from '@udecode/plate-common';\nimport { focusEditor, useEditorRef } from '@udecode/plate-common/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport { KbdPlugin } from '@udecode/plate-kbd/react';\nimport {\n  HighlighterIcon,\n  KeyboardIcon,\n  MoreHorizontalIcon,\n  SubscriptIcon,\n  SuperscriptIcon,\n} from 'lucide-react';\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  useOpenState,\n} from './dropdown-menu';\nimport { ToolbarButton } from './toolbar';\n\nexport function MoreDropdownMenu(props: DropdownMenuProps) {\n  const editor = useEditorRef();\n  const openState = useOpenState();\n\n  return (\n    <DropdownMenu modal={false} {...openState} {...props}>\n      <DropdownMenuTrigger asChild>\n        <ToolbarButton pressed={openState.open} tooltip=\"Insert\">\n          <MoreHorizontalIcon />\n        </ToolbarButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent\n        className=\"ignore-click-outside/toolbar flex max-h-[500px] min-w-[180px] flex-col overflow-y-auto\"\n        align=\"start\"\n      >\n        <DropdownMenuGroup>\n          <DropdownMenuItem\n            onSelect={() => {\n              editor.tf.toggle.mark({ key: HighlightPlugin.key });\n              collapseSelection(editor, { edge: 'end' });\n              focusEditor(editor);\n            }}\n          >\n            <HighlighterIcon />\n            Highlight\n          </DropdownMenuItem>\n\n          <DropdownMenuItem\n            onSelect={() => {\n              editor.tf.toggle.mark({ key: KbdPlugin.key });\n              collapseSelection(editor, { edge: 'end' });\n              focusEditor(editor);\n            }}\n          >\n            <KeyboardIcon />\n            Keyboard input\n          </DropdownMenuItem>\n\n          <DropdownMenuItem\n            onSelect={() => {\n              editor.tf.toggle.mark({\n                key: SuperscriptPlugin.key,\n                clear: [SubscriptPlugin.key, SuperscriptPlugin.key],\n              });\n              focusEditor(editor);\n            }}\n          >\n            <SuperscriptIcon />\n            Superscript\n            {/* (⌘+,) */}\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onSelect={() => {\n              editor.tf.toggle.mark({\n                key: SubscriptPlugin.key,\n                clear: [SuperscriptPlugin.key, SubscriptPlugin.key],\n              });\n              focusEditor(editor);\n            }}\n          >\n            <SubscriptIcon />\n            Subscript\n            {/* (⌘+.) */}\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "path": "plate-ui/more-dropdown-menu.tsx",
      "target": "components/plate-ui/more-dropdown-menu.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "more-dropdown-menu",
  "registryDependencies": [
    "dropdown-menu",
    "toolbar"
  ],
  "type": "registry:ui"
}