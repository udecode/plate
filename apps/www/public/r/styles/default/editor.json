{
  "dependencies": [],
  "doc": {
    "description": "A container for the editor content and styling.",
    "docs": [
      {
        "route": "https://pro.platejs.org/docs/components/editor"
      }
    ],
    "examples": [
      "editor-default",
      "editor-disabled",
      "editor-full-width",
      "editor-ai-chat"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport type { PlateContentProps } from '@udecode/plate-common/react';\nimport type { VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@udecode/cn';\nimport { PlateContent } from '@udecode/plate-common/react';\nimport { cva } from 'class-variance-authority';\n\nconst editorContainerVariants = cva(\n  'relative flex cursor-text [&_.slate-selection-area]:border [&_.slate-selection-area]:border-brand/25 [&_.slate-selection-area]:bg-brand/15',\n  {\n    defaultVariants: {\n      variant: 'default',\n    },\n    variants: {\n      variant: {\n        default: 'w-full',\n        demo: 'h-[650px] w-full overflow-y-auto',\n      },\n    },\n  }\n);\n\nexport const EditorContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<'div'> &\n    VariantProps<typeof editorContainerVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        'ignore-click-outside/toolbar',\n        editorContainerVariants({ variant }),\n        className\n      )}\n      role=\"button\"\n      {...props}\n    />\n  );\n});\n\nEditorContainer.displayName = 'EditorContainer';\n\nconst editorVariants = cva(\n  cn(\n    'group/editor',\n    'relative w-full overflow-x-hidden whitespace-pre-wrap break-words',\n    'rounded-md ring-offset-background placeholder:text-muted-foreground/80 focus-visible:outline-none',\n    '[&_[data-slate-placeholder]]:text-muted-foreground/80 [&_[data-slate-placeholder]]:!opacity-100',\n    '[&_[data-slate-placeholder]]:top-[auto_!important]',\n    '[&_strong]:font-bold'\n  ),\n  {\n    defaultVariants: {\n      variant: 'default',\n    },\n    variants: {\n      disabled: {\n        true: 'cursor-not-allowed opacity-50',\n      },\n      focused: {\n        true: 'ring-2 ring-ring ring-offset-2',\n      },\n      variant: {\n        ai: 'w-full px-0 text-sm',\n        aiChat:\n          'max-h-[min(70vh,320px)] w-full max-w-[700px] overflow-y-auto px-3 py-2 text-sm',\n        default:\n          'min-h-full w-full px-16 pb-72 pt-4 text-base sm:px-[max(64px,calc(50%-350px))]',\n        demo: 'min-h-full w-full px-16 pb-72 pt-4 text-base sm:px-[max(64px,calc(50%-350px))]',\n        fullWidth: 'min-h-full w-full px-16 pb-72 pt-4 text-base sm:px-24',\n      },\n    },\n  }\n);\n\nexport type EditorProps = PlateContentProps &\n  VariantProps<typeof editorVariants>;\n\nexport const Editor = React.forwardRef<HTMLDivElement, EditorProps>(\n  ({ className, disabled, focused, variant, ...props }, ref) => {\n    return (\n      <PlateContent\n        ref={ref}\n        className={cn(\n          editorVariants({\n            disabled,\n            focused,\n            variant,\n          }),\n          className\n        )}\n        disabled={disabled}\n        disableDefaultStyles\n        {...props}\n      />\n    );\n  }\n);\n\nEditor.displayName = 'Editor';\n",
      "path": "plate-ui/editor.tsx",
      "target": "components/plate-ui/editor.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "editor",
  "registryDependencies": [],
  "type": "registry:ui"
}