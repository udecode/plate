{
  "dependencies": [
    "@udecode/plate-code-block",
    "@udecode/plate-tabbable",
    "@udecode/plate-table"
  ],
  "files": [
    {
      "content": "'use client';\n\nimport { CodeBlockPlugin } from '@udecode/plate-code-block/react';\nimport {\n  isSelectionAtBlockEnd,\n  isSelectionAtBlockStart,\n  someNode,\n} from '@udecode/plate-common';\nimport { TabbablePlugin } from '@udecode/plate-tabbable/react';\nimport { TablePlugin } from '@udecode/plate-table/react';\n\nexport const tabbablePlugin = TabbablePlugin.configure(({ editor }) => ({\n  node: {\n    isElement: true,\n  },\n  options: {\n    query: () => {\n      if (isSelectionAtBlockStart(editor) || isSelectionAtBlockEnd(editor))\n        return false;\n\n      return !someNode(editor, {\n        match: (n) => {\n          return !!(\n            n.type &&\n            ([\n              CodeBlockPlugin.key,\n              TablePlugin.key,\n              'action_item',\n              'li',\n            ].includes(n.type as string) ||\n              n.listStyleType)\n          );\n        },\n      });\n    },\n  },\n  override: {\n    enabled: {\n      indent: false,\n    },\n  },\n}));\n",
      "path": "components/editor/plugins/tabbable-plugin.ts",
      "target": "components/editor/plugins/tabbable-plugin.ts",
      "type": "registry:component"
    }
  ],
  "name": "tabbable-plugin",
  "type": "registry:component"
}