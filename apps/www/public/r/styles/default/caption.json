{
  "dependencies": [
    "@udecode/plate-caption"
  ],
  "doc": {
    "description": "A text field for adding captions to media elements.",
    "docs": [
      {
        "route": "/docs/caption"
      },
      {
        "route": "https://pro.platejs.org/docs/components/caption"
      }
    ],
    "examples": [
      "media-demo"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport {\n  cn,\n  createPrimitiveComponent,\n  withCn,\n  withVariants,\n} from '@udecode/cn';\nimport {\n  Caption as CaptionPrimitive,\n  CaptionTextarea as CaptionTextareaPrimitive,\n  useCaptionButton,\n  useCaptionButtonState,\n} from '@udecode/plate-caption/react';\nimport { cva } from 'class-variance-authority';\n\nimport { Button } from './button';\n\nconst captionVariants = cva('max-w-full', {\n  defaultVariants: {\n    align: 'center',\n  },\n  variants: {\n    align: {\n      center: 'mx-auto',\n      left: 'mr-auto',\n      right: 'ml-auto',\n    },\n  },\n});\n\nexport const Caption = withVariants(CaptionPrimitive, captionVariants, [\n  'align',\n]);\n\nexport const CaptionTextarea = withCn(\n  CaptionTextareaPrimitive,\n  cn(\n    'mt-2 w-full resize-none border-none bg-inherit p-0 font-[inherit] text-inherit',\n    'focus:outline-none focus:[&::placeholder]:opacity-0',\n    'text-center print:placeholder:text-transparent'\n  )\n);\n\nexport const CaptionButton = createPrimitiveComponent(Button)({\n  propsHook: useCaptionButton,\n  stateHook: useCaptionButtonState,\n});\n",
      "path": "plate-ui/caption.tsx",
      "target": "components/plate-ui/caption.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "caption",
  "registryDependencies": [
    "button"
  ],
  "type": "registry:ui"
}