{
  "doc": {
    "description": "List creation and formatting."
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport { withProps } from '@udecode/cn';\nimport { Plate, PlateElement } from '@udecode/plate-common/react';\nimport {\n  BulletedListPlugin,\n  ListItemPlugin,\n  ListPlugin,\n  NumberedListPlugin,\n  TodoListPlugin,\n} from '@udecode/plate-list/react';\n\nimport { autoformatListPlugin } from '@/components/editor/plugins/autoformat-list-plugin';\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { FixedToolbarListPlugin } from '@/components/editor/plugins/fixed-toolbar-list-plugin';\nimport { useCreateEditor } from '@/components/editor/use-create-editor';\nimport { listValue } from '@/components/values/list-value';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\nimport { ListElement } from '@/components/plate-ui/list-element';\nimport { TodoListElement } from '@/components/plate-ui/todo-list-element';\n\nexport default function ListDemo() {\n  const editor = useCreateEditor({\n    components: {\n      [BulletedListPlugin.key]: withProps(ListElement, { variant: 'ul' }),\n      [ListItemPlugin.key]: withProps(PlateElement, { as: 'li' }),\n      [NumberedListPlugin.key]: withProps(ListElement, { variant: 'ol' }),\n      [TodoListPlugin.key]: TodoListElement,\n    },\n    plugins: [\n      ...editorPlugins,\n      ListPlugin,\n      TodoListPlugin,\n      FixedToolbarListPlugin,\n      autoformatListPlugin,\n    ],\n    value: listValue,\n  });\n\n  return (\n    <Plate editor={editor}>\n      <EditorContainer variant=\"demo\">\n        <Editor />\n      </EditorContainer>\n    </Plate>\n  );\n}\n",
      "path": "example/list-demo.tsx",
      "target": "components/list-demo.tsx",
      "type": "registry:example"
    },
    {
      "content": "import { jsx } from '@udecode/plate-test-utils';\n\njsx;\n\nexport const listValue: any = (\n  <fragment>\n    <hh2>✍️ List</hh2>\n    <hp>\n      <htext />\n    </hp>\n    <hul>\n      <hli>\n        <hlic>Cats</hlic>\n      </hli>\n      <hli>\n        <hlic>Dogs</hlic>\n      </hli>\n      <hli>\n        <hlic>Birds</hlic>\n        <hul>\n          <hli>\n            <hlic>Parrots</hlic>\n          </hli>\n          <hli>\n            <hlic>Owls</hlic>\n            <hul>\n              <hli>\n                <hlic>Barn Owls</hlic>\n              </hli>\n              <hli>\n                <hlic>Snowy Owls</hlic>\n              </hli>\n            </hul>\n          </hli>\n        </hul>\n      </hli>\n    </hul>\n    <hol>\n      <hli>\n        <hlic>Red</hlic>\n      </hli>\n      <hli>\n        <hlic>Blue</hlic>\n        <hul>\n          <hli>\n            <hlic>Light blue</hlic>\n          </hli>\n          <hli>\n            <hlic>Dark blue</hlic>\n            <hol>\n              <hli>\n                <hlic>Navy blue</hlic>\n              </hli>\n              <hli>\n                <hlic>Turquoise blue</hlic>\n              </hli>\n            </hol>\n          </hli>\n        </hul>\n      </hli>\n      <hli>\n        <hlic>Green</hlic>\n      </hli>\n    </hol>\n  </fragment>\n);\n\nexport const todoListValue: any = (\n  <fragment>\n    <hp>Each block is a React component in which you can manage the state:</hp>\n    <hp checked={true} indent={1} listStyleType=\"todo\">\n      Create a \"banana language\" translation plugin\n    </hp>\n    <hp checked={true} indent={1} listStyleType=\"todo\">\n      Create a \"detect sarcasm\" plugin (good luck with that)\n    </hp>\n    <hp checked={false} indent={1} listStyleType=\"todo\">\n      Create an AI auto-complete plugin\n    </hp>\n  </fragment>\n);\n",
      "path": "example/values/list-value.tsx",
      "target": "components/list-value.tsx",
      "type": "registry:example"
    },
    {
      "content": "'use client';\n\nimport { createPlatePlugin } from '@udecode/plate-common/react';\n\nimport { FixedToolbar } from '@/components/plate-ui/fixed-toolbar';\nimport { FixedToolbarListButtons } from '@/components/plate-ui/fixed-toolbar-list-buttons';\n\nexport const FixedToolbarListPlugin = createPlatePlugin({\n  key: 'fixed-toolbar',\n  render: {\n    beforeEditable: () => (\n      <FixedToolbar>\n        <FixedToolbarListButtons />\n      </FixedToolbar>\n    ),\n  },\n});\n",
      "path": "components/editor/plugins/fixed-toolbar-list-plugin.tsx",
      "target": "components/fixed-toolbar-list-plugin.tsx",
      "type": "registry:example"
    },
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport {\n  BoldPlugin,\n  CodePlugin,\n  ItalicPlugin,\n  StrikethroughPlugin,\n  UnderlinePlugin,\n} from '@udecode/plate-basic-marks/react';\nimport { useEditorReadOnly } from '@udecode/plate-common/react';\nimport {\n  FontBackgroundColorPlugin,\n  FontColorPlugin,\n} from '@udecode/plate-font/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport {\n  BulletedListPlugin,\n  NumberedListPlugin,\n} from '@udecode/plate-list/react';\nimport {\n  AudioPlugin,\n  FilePlugin,\n  ImagePlugin,\n  VideoPlugin,\n} from '@udecode/plate-media/react';\nimport {\n  BaselineIcon,\n  BoldIcon,\n  Code2Icon,\n  HighlighterIcon,\n  ItalicIcon,\n  PaintBucketIcon,\n  StrikethroughIcon,\n  UnderlineIcon,\n  WandSparklesIcon,\n} from 'lucide-react';\n\nimport { MoreDropdownMenu } from '@/components/plate-ui/more-dropdown-menu';\n\nimport { AIToolbarButton } from './ai-toolbar-button';\nimport { AlignDropdownMenu } from './align-dropdown-menu';\nimport { ColorDropdownMenu } from './color-dropdown-menu';\nimport { CommentToolbarButton } from './comment-toolbar-button';\nimport { EmojiDropdownMenu } from './emoji-dropdown-menu';\nimport { RedoToolbarButton, UndoToolbarButton } from './history-toolbar-button';\nimport { InsertDropdownMenu } from './insert-dropdown-menu';\nimport { LineHeightDropdownMenu } from './line-height-dropdown-menu';\nimport { LinkToolbarButton } from './link-toolbar-button';\nimport { ListIndentToolbarButton } from './list-indent-toolbar-button';\nimport { ListToolbarButton } from './list-toolbar-button';\nimport { MarkToolbarButton } from './mark-toolbar-button';\nimport { MediaToolbarButton } from './media-toolbar-button';\nimport { ModeDropdownMenu } from './mode-dropdown-menu';\nimport { TableDropdownMenu } from './table-dropdown-menu';\nimport { ToggleToolbarButton } from './toggle-toolbar-button';\nimport { ToolbarGroup } from './toolbar';\nimport { TurnIntoDropdownMenu } from './turn-into-dropdown-menu';\n\nexport function FixedToolbarListButtons() {\n  const readOnly = useEditorReadOnly();\n\n  return (\n    <div className=\"flex w-full\">\n      {!readOnly && (\n        <>\n          <ToolbarGroup>\n            <UndoToolbarButton />\n            <RedoToolbarButton />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <AIToolbarButton tooltip=\"AI commands\">\n              <WandSparklesIcon />\n            </AIToolbarButton>\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <InsertDropdownMenu />\n            <TurnIntoDropdownMenu />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <MarkToolbarButton nodeType={BoldPlugin.key} tooltip=\"Bold (⌘+B)\">\n              <BoldIcon />\n            </MarkToolbarButton>\n\n            <MarkToolbarButton\n              nodeType={ItalicPlugin.key}\n              tooltip=\"Italic (⌘+I)\"\n            >\n              <ItalicIcon />\n            </MarkToolbarButton>\n\n            <MarkToolbarButton\n              nodeType={UnderlinePlugin.key}\n              tooltip=\"Underline (⌘+U)\"\n            >\n              <UnderlineIcon />\n            </MarkToolbarButton>\n\n            <MarkToolbarButton\n              nodeType={StrikethroughPlugin.key}\n              tooltip=\"Strikethrough (⌘+⇧+M)\"\n            >\n              <StrikethroughIcon />\n            </MarkToolbarButton>\n\n            <MarkToolbarButton nodeType={CodePlugin.key} tooltip=\"Code (⌘+E)\">\n              <Code2Icon />\n            </MarkToolbarButton>\n\n            <ColorDropdownMenu\n              nodeType={FontColorPlugin.key}\n              tooltip=\"Text color\"\n            >\n              <BaselineIcon />\n            </ColorDropdownMenu>\n\n            <ColorDropdownMenu\n              nodeType={FontBackgroundColorPlugin.key}\n              tooltip=\"Background color\"\n            >\n              <PaintBucketIcon />\n            </ColorDropdownMenu>\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <AlignDropdownMenu />\n\n            <ListToolbarButton nodeType={BulletedListPlugin.key} />\n            <ListToolbarButton nodeType={NumberedListPlugin.key} />\n            <ToggleToolbarButton />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <LinkToolbarButton />\n            <TableDropdownMenu />\n            <EmojiDropdownMenu />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <MediaToolbarButton nodeType={ImagePlugin.key} />\n            <MediaToolbarButton nodeType={VideoPlugin.key} />\n            <MediaToolbarButton nodeType={AudioPlugin.key} />\n            <MediaToolbarButton nodeType={FilePlugin.key} />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <LineHeightDropdownMenu />\n            <ListIndentToolbarButton reverse />\n            <ListIndentToolbarButton />\n          </ToolbarGroup>\n\n          <ToolbarGroup>\n            <MoreDropdownMenu />\n          </ToolbarGroup>\n        </>\n      )}\n\n      <div className=\"grow\" />\n\n      <ToolbarGroup>\n        <MarkToolbarButton nodeType={HighlightPlugin.key} tooltip=\"Highlight\">\n          <HighlighterIcon />\n        </MarkToolbarButton>\n        <CommentToolbarButton />\n      </ToolbarGroup>\n\n      <ToolbarGroup>\n        <ModeDropdownMenu />\n      </ToolbarGroup>\n    </div>\n  );\n}\n",
      "path": "plate-ui/fixed-toolbar-list-buttons.tsx",
      "target": "components/fixed-toolbar-list-buttons.tsx",
      "type": "registry:example"
    },
    {
      "content": "import { withProps } from '@udecode/cn';\nimport { AIPlugin } from '@udecode/plate-ai/react';\nimport {\n  BoldPlugin,\n  CodePlugin,\n  ItalicPlugin,\n  StrikethroughPlugin,\n  SubscriptPlugin,\n  SuperscriptPlugin,\n  UnderlinePlugin,\n} from '@udecode/plate-basic-marks/react';\nimport { BlockquotePlugin } from '@udecode/plate-block-quote/react';\nimport {\n  CodeBlockPlugin,\n  CodeLinePlugin,\n  CodeSyntaxPlugin,\n} from '@udecode/plate-code-block/react';\nimport { CommentsPlugin } from '@udecode/plate-comments/react';\nimport {\n  ParagraphPlugin,\n  PlateElement,\n  PlateLeaf,\n  usePlateEditor,\n} from '@udecode/plate-common/react';\nimport { DatePlugin } from '@udecode/plate-date/react';\nimport { EmojiInputPlugin } from '@udecode/plate-emoji/react';\nimport { ExcalidrawPlugin } from '@udecode/plate-excalidraw/react';\nimport { HEADING_KEYS } from '@udecode/plate-heading';\nimport { TocPlugin } from '@udecode/plate-heading/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport { HorizontalRulePlugin } from '@udecode/plate-horizontal-rule/react';\nimport { KbdPlugin } from '@udecode/plate-kbd/react';\nimport { ColumnItemPlugin, ColumnPlugin } from '@udecode/plate-layout/react';\nimport { LinkPlugin } from '@udecode/plate-link/react';\nimport {\n  BulletedListPlugin,\n  ListItemPlugin,\n  NumberedListPlugin,\n} from '@udecode/plate-list/react';\nimport { ImagePlugin, MediaEmbedPlugin } from '@udecode/plate-media/react';\nimport {\n  MentionInputPlugin,\n  MentionPlugin,\n} from '@udecode/plate-mention/react';\nimport { SlashInputPlugin } from '@udecode/plate-slash-command/react';\nimport {\n  TableCellHeaderPlugin,\n  TableCellPlugin,\n  TablePlugin,\n  TableRowPlugin,\n} from '@udecode/plate-table/react';\nimport { TogglePlugin } from '@udecode/plate-toggle/react';\n\nimport { copilotPlugins } from '@/components/editor/plugins/copilot-plugins';\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { FixedToolbarListPlugin } from '@/components/editor/plugins/fixed-toolbar-list-plugin';\nimport { FloatingToolbarPlugin } from '@/components/editor/plugins/floating-toolbar-plugin';\nimport { AILeaf } from '@/components/plate-ui/ai-leaf';\nimport { BlockquoteElement } from '@/components/plate-ui/blockquote-element';\nimport { CodeBlockElement } from '@/components/plate-ui/code-block-element';\nimport { CodeLeaf } from '@/components/plate-ui/code-leaf';\nimport { CodeLineElement } from '@/components/plate-ui/code-line-element';\nimport { CodeSyntaxLeaf } from '@/components/plate-ui/code-syntax-leaf';\nimport { ColumnElement } from '@/components/plate-ui/column-element';\nimport { ColumnGroupElement } from '@/components/plate-ui/column-group-element';\nimport { CommentLeaf } from '@/components/plate-ui/comment-leaf';\nimport { DateElement } from '@/components/plate-ui/date-element';\nimport { EmojiInputElement } from '@/components/plate-ui/emoji-input-element';\nimport { ExcalidrawElement } from '@/components/plate-ui/excalidraw-element';\nimport { HeadingElement } from '@/components/plate-ui/heading-element';\nimport { HighlightLeaf } from '@/components/plate-ui/highlight-leaf';\nimport { HrElement } from '@/components/plate-ui/hr-element';\nimport { ImageElement } from '@/components/plate-ui/image-element';\nimport { KbdLeaf } from '@/components/plate-ui/kbd-leaf';\nimport { LinkElement } from '@/components/plate-ui/link-element';\nimport { ListElement } from '@/components/plate-ui/list-element';\nimport { MediaEmbedElement } from '@/components/plate-ui/media-embed-element';\nimport { MentionElement } from '@/components/plate-ui/mention-element';\nimport { MentionInputElement } from '@/components/plate-ui/mention-input-element';\nimport { ParagraphElement } from '@/components/plate-ui/paragraph-element';\nimport { withPlaceholders } from '@/components/plate-ui/placeholder';\nimport { SlashInputElement } from '@/components/plate-ui/slash-input-element';\nimport {\n  TableCellElement,\n  TableCellHeaderElement,\n} from '@/components/plate-ui/table-cell-element';\nimport { TableElement } from '@/components/plate-ui/table-element';\nimport { TableRowElement } from '@/components/plate-ui/table-row-element';\nimport { TocElement } from '@/components/plate-ui/toc-element';\nimport { ToggleElement } from '@/components/plate-ui/toggle-element';\nimport { withDraggables } from '@/components/plate-ui/with-draggables';\n\nexport const useCreateEditor = () => {\n  return usePlateEditor({\n    override: {\n      components: withDraggables(\n        withPlaceholders({\n          [AIPlugin.key]: AILeaf,\n          [BlockquotePlugin.key]: BlockquoteElement,\n          [BoldPlugin.key]: withProps(PlateLeaf, { as: 'strong' }),\n          [BulletedListPlugin.key]: withProps(ListElement, { variant: 'ul' }),\n          [CodeBlockPlugin.key]: CodeBlockElement,\n          [CodeLinePlugin.key]: CodeLineElement,\n          [CodePlugin.key]: CodeLeaf,\n          [CodeSyntaxPlugin.key]: CodeSyntaxLeaf,\n          [ColumnItemPlugin.key]: ColumnElement,\n          [ColumnPlugin.key]: ColumnGroupElement,\n          [CommentsPlugin.key]: CommentLeaf,\n          [DatePlugin.key]: DateElement,\n          [EmojiInputPlugin.key]: EmojiInputElement,\n          [ExcalidrawPlugin.key]: ExcalidrawElement,\n          [HEADING_KEYS.h1]: withProps(HeadingElement, { variant: 'h1' }),\n          [HEADING_KEYS.h2]: withProps(HeadingElement, { variant: 'h2' }),\n          [HEADING_KEYS.h3]: withProps(HeadingElement, { variant: 'h3' }),\n          [HEADING_KEYS.h4]: withProps(HeadingElement, { variant: 'h4' }),\n          [HEADING_KEYS.h5]: withProps(HeadingElement, { variant: 'h5' }),\n          [HEADING_KEYS.h6]: withProps(HeadingElement, { variant: 'h6' }),\n          [HighlightPlugin.key]: HighlightLeaf,\n          [HorizontalRulePlugin.key]: HrElement,\n          [ImagePlugin.key]: ImageElement,\n          [ItalicPlugin.key]: withProps(PlateLeaf, { as: 'em' }),\n          [KbdPlugin.key]: KbdLeaf,\n          [LinkPlugin.key]: LinkElement,\n          [ListItemPlugin.key]: withProps(PlateElement, { as: 'li' }),\n          [MediaEmbedPlugin.key]: MediaEmbedElement,\n          [MentionInputPlugin.key]: MentionInputElement,\n          [MentionPlugin.key]: MentionElement,\n          [NumberedListPlugin.key]: withProps(ListElement, { variant: 'ol' }),\n          [ParagraphPlugin.key]: ParagraphElement,\n          [SlashInputPlugin.key]: SlashInputElement,\n          [StrikethroughPlugin.key]: withProps(PlateLeaf, { as: 's' }),\n          [SubscriptPlugin.key]: withProps(PlateLeaf, { as: 'sub' }),\n          [SuperscriptPlugin.key]: withProps(PlateLeaf, { as: 'sup' }),\n          [TableCellHeaderPlugin.key]: TableCellHeaderElement,\n          [TableCellPlugin.key]: TableCellElement,\n          [TablePlugin.key]: TableElement,\n          [TableRowPlugin.key]: TableRowElement,\n          [TocPlugin.key]: TocElement,\n          [TogglePlugin.key]: ToggleElement,\n          [UnderlinePlugin.key]: withProps(PlateLeaf, { as: 'u' }),\n        })\n      ),\n    },\n    plugins: [\n      ...copilotPlugins,\n      ...editorPlugins,\n      FixedToolbarListPlugin,\n      FloatingToolbarPlugin,\n    ],\n    value: [\n      {\n        children: [{ text: 'Playground' }],\n        type: 'h1',\n      },\n      {\n        children: [\n          { text: 'A rich-text editor with AI capabilities. Try the ' },\n          { bold: true, text: 'AI commands' },\n          { text: ' or use ' },\n          { kbd: true, text: 'Cmd+J' },\n          { text: ' to open the AI menu.' },\n        ],\n        type: ParagraphPlugin.key,\n      },\n    ],\n  });\n};\n",
      "path": "components/editor/use-create-editor-list.ts",
      "target": "components/use-create-editor-list.ts",
      "type": "registry:example"
    },
    {
      "content": "'use client';\n\nimport { CalloutPlugin } from '@udecode/plate-callout/react';\nimport { ParagraphPlugin } from '@udecode/plate-common/react';\nimport { DatePlugin } from '@udecode/plate-date/react';\nimport { DocxPlugin } from '@udecode/plate-docx';\nimport { EmojiPlugin } from '@udecode/plate-emoji/react';\nimport {\n  FontBackgroundColorPlugin,\n  FontColorPlugin,\n  FontSizePlugin,\n} from '@udecode/plate-font/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport { HorizontalRulePlugin } from '@udecode/plate-horizontal-rule/react';\nimport { JuicePlugin } from '@udecode/plate-juice';\nimport { KbdPlugin } from '@udecode/plate-kbd/react';\nimport { ColumnPlugin } from '@udecode/plate-layout/react';\nimport { MarkdownPlugin } from '@udecode/plate-markdown';\nimport {\n  EquationPlugin,\n  InlineEquationPlugin,\n} from '@udecode/plate-math/react';\nimport { SlashPlugin } from '@udecode/plate-slash-command/react';\nimport { TogglePlugin } from '@udecode/plate-toggle/react';\nimport { TrailingBlockPlugin } from '@udecode/plate-trailing-block';\n\nimport { FixedToolbarPlugin } from '@/components/editor/plugins/fixed-toolbar-plugin';\nimport { FloatingToolbarPlugin } from '@/components/editor/plugins/floating-toolbar-plugin';\n\nimport { aiPlugins } from './ai-plugins';\nimport { alignPlugin } from './align-plugin';\nimport { autoformatPlugin } from './autoformat-plugin';\nimport { basicNodesPlugins } from './basic-nodes-plugins';\nimport { blockMenuPlugins } from './block-menu-plugins';\nimport { commentsPlugin } from './comments-plugin';\nimport { cursorOverlayPlugin } from './cursor-overlay-plugin';\nimport { deletePlugins } from './delete-plugins';\nimport { dndPlugins } from './dnd-plugins';\nimport { exitBreakPlugin } from './exit-break-plugin';\nimport { indentListPlugins } from './indent-list-plugins';\nimport { lineHeightPlugin } from './line-height-plugin';\nimport { linkPlugin } from './link-plugin';\nimport { mediaPlugins } from './media-plugins';\nimport { mentionPlugin } from './mention-plugin';\nimport { resetBlockTypePlugin } from './reset-block-type-plugin';\nimport { softBreakPlugin } from './soft-break-plugin';\nimport { tablePlugin } from './table-plugin';\nimport { tocPlugin } from './toc-plugin';\n\nexport const viewPlugins = [\n  ...basicNodesPlugins,\n  HorizontalRulePlugin,\n  linkPlugin,\n  DatePlugin,\n  mentionPlugin,\n  tablePlugin,\n  TogglePlugin,\n  tocPlugin,\n  ...mediaPlugins,\n  InlineEquationPlugin,\n  EquationPlugin,\n  CalloutPlugin,\n  ColumnPlugin,\n\n  // Marks\n  FontColorPlugin,\n  FontBackgroundColorPlugin,\n  FontSizePlugin,\n  HighlightPlugin,\n  KbdPlugin,\n\n  // Block Style\n  alignPlugin,\n  ...indentListPlugins,\n  lineHeightPlugin,\n\n  // Collaboration\n  commentsPlugin,\n] as const;\n\nexport const editorPlugins = [\n  // AI\n  ...aiPlugins,\n\n  // Nodes\n  ...viewPlugins,\n\n  // Functionality\n  SlashPlugin,\n  autoformatPlugin,\n  cursorOverlayPlugin,\n  ...blockMenuPlugins,\n  ...dndPlugins,\n  EmojiPlugin,\n  exitBreakPlugin,\n  resetBlockTypePlugin,\n  ...deletePlugins,\n  softBreakPlugin,\n  TrailingBlockPlugin.configure({ options: { type: ParagraphPlugin.key } }),\n\n  // Deserialization\n  DocxPlugin,\n  MarkdownPlugin.configure({ options: { indentList: true } }),\n  JuicePlugin,\n\n  // UI\n  FixedToolbarPlugin,\n  FloatingToolbarPlugin,\n];\n",
      "path": "components/editor/plugins/editor-plugins.tsx",
      "target": "components/editor-plugins.tsx",
      "type": "registry:example"
    }
  ],
  "name": "list-demo",
  "registryDependencies": [
    "autoformat-list-plugin",
    "list-element",
    "todo-list-element"
  ],
  "type": "registry:example"
}