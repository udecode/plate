{
  "dependencies": [
    "@udecode/plate-selection"
  ],
  "doc": {
    "description": "A visual overlay for cursors and selections.",
    "docs": [
      {
        "route": "/docs/cursor-overlay"
      },
      {
        "route": "https://pro.platejs.org/docs/components/cursor-overlay"
      }
    ],
    "examples": [
      "ai-demo"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport { cn } from '@udecode/cn';\nimport { isCollapsed } from '@udecode/plate-common';\nimport {\n  type CursorData,\n  type CursorOverlayState,\n  useCursorOverlay,\n} from '@udecode/plate-selection/react';\n\nexport function Cursor({\n  id,\n  caretPosition,\n  data,\n  selection,\n  selectionRects,\n}: CursorOverlayState<CursorData>) {\n  const { style, selectionStyle = style } = data ?? ({} as CursorData);\n  const isCursor = isCollapsed(selection);\n\n  return (\n    <>\n      {selectionRects.map((position, i) => {\n        return (\n          <div\n            key={i}\n            className={cn(\n              'pointer-events-none absolute z-10',\n              id === 'selection' && 'bg-brand/25',\n              id === 'selection' && isCursor && 'bg-primary'\n            )}\n            style={{\n              ...selectionStyle,\n              ...position,\n            }}\n          />\n        );\n      })}\n      {caretPosition && (\n        <div\n          className={cn(\n            'pointer-events-none absolute z-10 w-0.5',\n            id === 'drag' && 'w-px bg-brand'\n          )}\n          style={{ ...caretPosition, ...style }}\n        />\n      )}\n    </>\n  );\n}\n\nexport function CursorOverlay() {\n  const { cursors } = useCursorOverlay();\n\n  return (\n    <>\n      {cursors.map((cursor) => (\n        <Cursor key={cursor.id} {...cursor} />\n      ))}\n    </>\n  );\n}\n",
      "path": "plate-ui/cursor-overlay.tsx",
      "target": "components/plate-ui/cursor-overlay.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "cursor-overlay",
  "registryDependencies": [],
  "type": "registry:ui"
}