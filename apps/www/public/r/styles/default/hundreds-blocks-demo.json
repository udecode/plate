{
  "files": [
    {
      "content": "'use client';\n\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport type { TElement, Value } from '@udecode/plate-common';\n\nimport { BasicElementsPlugin } from '@udecode/plate-basic-elements/react';\nimport { BasicMarksPlugin } from '@udecode/plate-basic-marks/react';\nimport { Plate } from '@udecode/plate-common/react';\nimport { createEditor } from 'slate';\nimport {\n  type ReactEditor,\n  type RenderElementProps,\n  Editable,\n  Slate,\n  withReact,\n} from 'slate-react';\n\nimport { useCreateEditor } from '@/components/editor/use-create-editor';\nimport { createHugeDocumentValue } from '@/components/values/huge-document-value';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nconst value = createHugeDocumentValue();\n\nfunction WithPlate() {\n  const editor = useCreateEditor({\n    plugins: [BasicElementsPlugin, BasicMarksPlugin],\n    value,\n  });\n\n  return (\n    <Plate editor={editor}>\n      <EditorContainer>\n        <Editor spellCheck={false} />\n      </EditorContainer>\n    </Plate>\n  );\n}\n\nfunction Element({ attributes, children, element }: RenderElementProps) {\n  switch ((element as TElement).type) {\n    case 'h1': {\n      return <h1 {...attributes}>{children}</h1>;\n    }\n    default: {\n      return <p {...attributes}>{children}</p>;\n    }\n  }\n}\n\nfunction WithoutPlate() {\n  const [initialValue, setValue] = useState(value);\n  const renderElement = useCallback((p: any) => <Element {...p} />, []);\n  const editor = useMemo(() => withReact(createEditor() as ReactEditor), []);\n  const onChange = useCallback((newValue: Value) => setValue(newValue), []);\n\n  return (\n    <Slate\n      onChange={onChange as any}\n      editor={editor}\n      initialValue={initialValue}\n    >\n      <Editable renderElement={renderElement} spellCheck={false} />\n    </Slate>\n  );\n}\n\nexport default function HundredsBlocksDemo() {\n  return (\n    <div className=\"flex\">\n      <div className=\"w-1/2 p-4\">\n        <div className=\"mb-4 text-lg font-bold\">Plate</div>\n        <WithPlate />\n      </div>\n      <div className=\"w-1/2 p-4\">\n        <div className=\"mb-4 text-lg font-bold\">Slate</div>\n        <WithoutPlate />\n      </div>\n    </div>\n  );\n}\n",
      "path": "example/hundreds-blocks-demo.tsx",
      "target": "components/hundreds-blocks-demo.tsx",
      "type": "registry:example"
    }
  ],
  "name": "hundreds-blocks-demo",
  "registryDependencies": [],
  "type": "registry:example"
}