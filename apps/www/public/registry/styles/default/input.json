{
  "name": "input",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "name": "input.tsx",
      "content": "import * as React from 'react';\nimport { VariantProps, cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nexport const inputVariants = cva(\n  'flex w-full rounded-md bg-transparent text-sm file:border-0 file:bg-background file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default:\n          'border border-input ring-offset-background focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        ghost: 'border-none focus-visible:ring-transparent',\n      },\n      h: {\n        sm: 'h-9 px-3 py-2',\n        md: 'h-10 px-3 py-2',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      h: 'md',\n    },\n  }\n);\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    VariantProps<typeof inputVariants> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, variant, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(inputVariants({ variant }), className)}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"
    }
  ],
  "type": "components:plate-ui"
}