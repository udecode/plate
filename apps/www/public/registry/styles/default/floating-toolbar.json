{
  "name": "floating-toolbar",
  "dependencies": [
    "@udecode/plate-floating"
  ],
  "registryDependencies": [
    "toolbar"
  ],
  "files": [
    {
      "name": "floating-toolbar.tsx",
      "content": "import React, { ReactNode } from 'react';\nimport { PortalBody } from '@udecode/plate-common';\nimport {\n  UseVirtualFloatingOptions,\n  useFloatingToolbar,\n} from '@udecode/plate-floating';\n\nimport { cn } from '@/lib/utils';\n\nimport { Toolbar, ToolbarProps } from './toolbar';\n\nexport interface FloatingToolbarProps extends ToolbarProps {\n  children: ReactNode;\n\n  portalElement?: Element;\n\n  floatingOptions?: UseVirtualFloatingOptions;\n\n  ignoreReadOnly?: boolean;\n\n  hideToolbar?: boolean;\n}\n\nexport function FloatingToolbar({\n  portalElement,\n  floatingOptions,\n  ignoreReadOnly,\n  hideToolbar,\n  children,\n  ...props\n}: FloatingToolbarProps) {\n  const { refs, style, open } = useFloatingToolbar({\n    floatingOptions,\n    ignoreReadOnly,\n    hideToolbar,\n  });\n\n  if (!open) return null;\n\n  return (\n    <PortalBody element={portalElement}>\n      <Toolbar\n        className={cn(\n          'absolute z-50 whitespace-nowrap border bg-popover px-1 opacity-100 shadow-md'\n        )}\n        ref={refs.setFloating}\n        style={style}\n        {...props}\n      >\n        {children}\n      </Toolbar>\n    </PortalBody>\n  );\n}\n"
    }
  ],
  "type": "components:plate-ui"
}