{
  "name": "floating-toolbar",
  "dependencies": [
    "@udecode/plate-floating"
  ],
  "registryDependencies": [
    "toolbar"
  ],
  "files": [
    {
      "name": "floating-toolbar.tsx",
      "content": "'use client';\n\nimport React from 'react';\nimport { PortalBody, useComposedRef } from '@udecode/plate-common';\nimport {\n  flip,\n  FloatingToolbarState,\n  offset,\n  useFloatingToolbar,\n  useFloatingToolbarState,\n} from '@udecode/plate-floating';\n\nimport { cn } from '@/lib/utils';\n\nimport { Toolbar, ToolbarProps } from './toolbar';\n\nexport interface FloatingToolbarProps extends ToolbarProps {\n  state?: FloatingToolbarState;\n}\n\nconst FloatingToolbar = React.forwardRef<\n  React.ElementRef<typeof Toolbar>,\n  FloatingToolbarProps\n>(({ state, children, ...props }, componentRef) => {\n  const floatingToolbarState = useFloatingToolbarState({\n    ...state,\n    floatingOptions: {\n      placement: 'top',\n      middleware: [\n        offset(12),\n        flip({\n          padding: 12,\n          fallbackPlacements: [\n            'top-start',\n            'top-end',\n            'bottom-start',\n            'bottom-end',\n          ],\n        }),\n      ],\n      ...state?.floatingOptions,\n    },\n  });\n\n  const {\n    ref: floatingRef,\n    props: rootProps,\n    hidden,\n  } = useFloatingToolbar(floatingToolbarState);\n\n  const ref = useComposedRef<HTMLDivElement>(componentRef, floatingRef);\n\n  if (hidden) return null;\n\n  return (\n    <PortalBody>\n      <Toolbar\n        ref={ref}\n        className={cn(\n          'absolute z-50 whitespace-nowrap border bg-popover px-1 opacity-100 shadow-md print:hidden'\n        )}\n        {...rootProps}\n        {...props}\n      >\n        {children}\n      </Toolbar>\n    </PortalBody>\n  );\n});\nFloatingToolbar.displayName = 'FloatingToolbar';\n\nexport { FloatingToolbar };\n"
    }
  ],
  "type": "components:plate-ui"
}