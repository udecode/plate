{
  "name": "media-embed-element",
  "dependencies": [
    "@udecode/plate-media",
    "react-tweet"
  ],
  "registryDependencies": [
    "media-popover"
  ],
  "files": [
    {
      "name": "media-embed-element.tsx",
      "content": "import React from 'react';\nimport {\n  Box,\n  PlateElement,\n  PlateElementProps,\n  Value,\n} from '@udecode/plate-common';\nimport {\n  Caption,\n  CaptionTextarea,\n  ELEMENT_MEDIA_EMBED,\n  parseTwitterUrl,\n  parseVideoUrl,\n  Resizable,\n  TMediaEmbedElement,\n  useMediaState,\n} from '@udecode/plate-media';\nimport { cva } from 'class-variance-authority';\nimport LiteYouTubeEmbed from 'react-lite-youtube-embed';\n\nimport 'react-lite-youtube-embed/dist/LiteYouTubeEmbed.css';\n\nimport { Tweet } from 'react-tweet';\n\nimport { cn } from '@/lib/utils';\n\nimport { MediaPopover } from './media-popover';\n\nexport const handleVariants = cva(\n  cn(\n    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n    'after:flex after:h-16 after:bg-ring after:opacity-0 group-hover:after:opacity-100',\n    \"after:w-[3px] after:rounded-[6px] after:content-['_']\"\n  ),\n  {\n    variants: {\n      placement: {\n        left: '-left-3 -ml-3 pl-3',\n        right: '-right-3 -mr-3 items-end pr-3',\n      },\n    },\n  }\n);\n\nconst MediaEmbedElement = React.forwardRef<\n  React.ElementRef<typeof PlateElement>,\n  PlateElementProps<Value, TMediaEmbedElement>\n>(({ className, children, ...props }, ref) => {\n  const { focused, readOnly, selected, embed, isTweet, isYoutube, isVideo } =\n    useMediaState({\n      urlParsers: [parseTwitterUrl, parseVideoUrl],\n    });\n  const provider = embed?.provider;\n\n  return (\n    <MediaPopover pluginKey={ELEMENT_MEDIA_EMBED}>\n      <PlateElement\n        ref={ref}\n        className={cn('relative py-2.5', className)}\n        {...props}\n      >\n        <figure className=\"group relative m-0 w-full\" contentEditable={false}>\n          <Resizable\n            className={cn('mx-auto')}\n            options={{\n              maxWidth: isTweet ? 550 : '100%',\n              minWidth: isTweet ? 300 : 100,\n              renderHandleLeft: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={handleVariants({\n                    placement: 'left',\n                  })}\n                />\n              ),\n              renderHandleRight: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={handleVariants({\n                    placement: 'right',\n                  })}\n                />\n              ),\n            }}\n          >\n            {isYoutube && <LiteYouTubeEmbed id={embed!.id!} title=\"youtube\" />}\n            {isVideo && !isYoutube && (\n              <div\n                className={cn(\n                  provider === 'youtube' && 'pb-[56.2061%]',\n                  provider === 'vimeo' && 'pb-[75%]',\n                  provider === 'youku' && 'pb-[56.25%]',\n                  provider === 'dailymotion' && 'pb-[56.0417%]',\n                  provider === 'coub' && 'pb-[51.25%]'\n                )}\n              >\n                <iframe\n                  className={cn(\n                    'absolute left-0 top-0 h-full w-full rounded-sm',\n                    isVideo && 'border-0',\n                    focused && selected && 'ring-2 ring-ring ring-offset-2'\n                  )}\n                  src={embed!.url}\n                  title=\"embed\"\n                  allowFullScreen\n                />\n              </div>\n            )}\n            {isTweet && (\n              <div\n                className={cn(\n                  '[&_.react-tweet-theme]:my-0',\n                  !readOnly &&\n                    selected &&\n                    '[&_.react-tweet-theme]:ring-2 [&_.react-tweet-theme]:ring-ring [&_.react-tweet-theme]:ring-offset-2'\n                )}\n              >\n                <Tweet id={embed!.id!} />\n              </div>\n            )}\n          </Resizable>\n\n          <Caption className={cn('mx-auto')}>\n            <CaptionTextarea\n              className={cn(\n                'mt-2 w-full resize-none border-none bg-inherit p-0 font-[inherit] text-inherit',\n                'focus:outline-none focus:[&::placeholder]:opacity-0',\n                'text-center'\n              )}\n              placeholder=\"Write a caption...\"\n            />\n          </Caption>\n        </figure>\n\n        {children}\n      </PlateElement>\n    </MediaPopover>\n  );\n});\nMediaEmbedElement.displayName = 'MediaEmbedElement';\n\nexport { MediaEmbedElement };\n"
    }
  ],
  "type": "components:plate-ui"
}