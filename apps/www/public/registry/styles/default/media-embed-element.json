{
  "name": "media-embed-element",
  "dependencies": [
    "@udecode/plate-media"
  ],
  "registryDependencies": [
    "media-popover"
  ],
  "files": [
    {
      "name": "media-embed-element.tsx",
      "content": "import React from 'react';\nimport {\n  Box,\n  PlateElement,\n  PlateElementProps,\n  Value,\n} from '@udecode/plate-common';\nimport {\n  Caption,\n  CaptionTextarea,\n  ELEMENT_MEDIA_EMBED,\n  Resizable,\n  TMediaEmbedElement,\n  useMediaEmbed,\n  useMediaState,\n} from '@udecode/plate-media';\n\nimport { cn } from '@/lib/utils';\n\nimport { MediaPopover } from './media-popover';\n\nconst MediaEmbedElement = React.forwardRef<\n  React.ElementRef<typeof PlateElement>,\n  PlateElementProps<Value, TMediaEmbedElement>\n>(({ className, children, ...props }, ref) => {\n  const { focused, provider, readOnly, selected } = useMediaState();\n  const { props: mediaEmbedProps, component: MediaComponent } = useMediaEmbed();\n\n  return (\n    <MediaPopover pluginKey={ELEMENT_MEDIA_EMBED}>\n      <PlateElement\n        ref={ref}\n        className={cn('relative py-2.5', className)}\n        {...props}\n      >\n        <figure\n          className={cn(\n            'group relative m-0 w-full',\n            provider === 'twitter' &&\n              '[&_.twitter-tweet]: [&_.twitter-tweet]:!mx-auto [&_.twitter-tweet]:!my-0 [&_.twitter-tweet]:p-0.5',\n            provider === 'twitter' &&\n              !readOnly &&\n              selected &&\n              '[&_.twitter-tweet]:shadow-[0_0_1px_rgb(59,130,249)]'\n          )}\n          contentEditable={false}\n        >\n          <Resizable\n            className={cn('mx-auto')}\n            options={{\n              maxWidth: provider === 'twitter' ? 550 : '100%',\n              minWidth: provider === 'twitter' ? 300 : 100,\n              renderHandleLeft: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={cn(\n                    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n                    'after:flex after:h-16 after:bg-ring after:opacity-0 group-hover:after:opacity-100',\n                    \"after:w-[3px] after:rounded-[6px] after:content-['_']\",\n                    focused && selected && 'opacity-100',\n                    // variant left\n                    '-left-3 -ml-3 pl-3'\n                  )}\n                />\n              ),\n              renderHandleRight: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={cn(\n                    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n                    'after:flex after:h-16 after:bg-ring  after:opacity-0 group-hover:after:opacity-100',\n                    \"after:w-[3px] after:rounded-[6px] after:content-['_']\",\n                    focused && selected && 'opacity-100',\n                    // variant right\n                    '-right-3 -mr-3 items-end pr-3',\n                    provider === 'twitter' && '-mr-4'\n                  )}\n                />\n              ),\n            }}\n          >\n            <div\n              className={cn(\n                provider !== 'twitter' && 'pb-[56.0417%]',\n                provider === 'youtube' && 'pb-[56.2061%]',\n                provider === 'vimeo' && 'pb-[75%]',\n                provider === 'youku' && 'pb-[56.25%]',\n                provider === 'dailymotion' && 'pb-[56.0417%]',\n                provider === 'coub' && 'pb-[51.25%]'\n              )}\n            >\n              <MediaComponent\n                className={cn(\n                  'absolute left-0 top-0 h-full w-full rounded-sm',\n                  selected && focused && 'ring-2 ring-ring ring-offset-2'\n                )}\n                title=\"embed\"\n                {...mediaEmbedProps}\n              />\n            </div>\n          </Resizable>\n\n          <Caption className={cn('mx-auto')}>\n            <CaptionTextarea\n              className={cn(\n                'mt-2 w-full resize-none border-none bg-inherit p-0 font-[inherit] text-inherit',\n                'focus:outline-none focus:[&::placeholder]:opacity-0',\n                'text-center'\n              )}\n              placeholder=\"Write a caption...\"\n            />\n          </Caption>\n        </figure>\n\n        {children}\n      </PlateElement>\n    </MediaPopover>\n  );\n});\nMediaEmbedElement.displayName = 'MediaEmbedElement';\n\nexport { MediaEmbedElement };\n"
    }
  ],
  "type": "components:plate-ui"
}