{
  "name": "media-popover",
  "dependencies": [
    "@udecode/plate-media"
  ],
  "registryDependencies": [
    "button",
    "input",
    "popover",
    "separator"
  ],
  "files": [
    {
      "name": "media-popover.tsx",
      "content": "import React, { useEffect } from 'react';\nimport {\n  isCollapsed,\n  useElement,\n  usePlateEditorState,\n  useRemoveNodeButton,\n} from '@udecode/plate-common';\nimport {\n  FloatingMedia as FloatingMediaPrimitive,\n  floatingMediaActions,\n  useFloatingMediaSelectors,\n} from '@udecode/plate-media';\nimport { useReadOnly, useSelected } from 'slate-react';\n\nimport { Icons } from '@/components/icons';\n\nimport { Button, buttonVariants } from './button';\nimport { inputVariants } from './input';\nimport { Popover, PopoverAnchor, PopoverContent } from './popover';\nimport { Separator } from './separator';\n\nexport interface MediaPopoverProps {\n  pluginKey?: string;\n  children: React.ReactNode;\n}\n\nexport function MediaPopover({ pluginKey, children }: MediaPopoverProps) {\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const editor = usePlateEditorState();\n\n  const isOpen = !readOnly && selected && isCollapsed(editor.selection);\n  const isEditing = useFloatingMediaSelectors().isEditing();\n\n  useEffect(() => {\n    if (!isOpen && isEditing) {\n      floatingMediaActions.isEditing(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  const element = useElement();\n  const { props: buttonProps } = useRemoveNodeButton({ element });\n\n  if (readOnly) return <>{children}</>;\n\n  return (\n    <Popover open={isOpen}>\n      <PopoverAnchor>{children}</PopoverAnchor>\n\n      <PopoverContent className=\"w-auto p-1\">\n        {isEditing ? (\n          <div className=\"flex w-[330px] flex-col\">\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center pl-3 text-muted-foreground\">\n                <Icons.link className=\"h-4 w-4\" />\n              </div>\n\n              <FloatingMediaPrimitive.UrlInput\n                className={inputVariants({ variant: 'ghost', h: 'sm' })}\n                placeholder=\"Paste the embed link...\"\n                options={{\n                  pluginKey,\n                }}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"box-content flex h-9 items-center gap-1\">\n            <FloatingMediaPrimitive.EditButton\n              className={buttonVariants({ variant: 'ghost', size: 'sm' })}\n            >\n              Edit link\n            </FloatingMediaPrimitive.EditButton>\n\n            <Separator orientation=\"vertical\" className=\"my-1\" />\n\n            <Button variant=\"ghost\" size=\"sms\" {...buttonProps}>\n              <Icons.delete className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n      </PopoverContent>\n    </Popover>\n  );\n}\n"
    }
  ],
  "type": "components:plate-ui"
}