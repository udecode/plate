{
  "name": "image-element",
  "dependencies": [
    "@udecode/plate-media"
  ],
  "registryDependencies": [
    "media-popover"
  ],
  "files": [
    {
      "name": "image-element.tsx",
      "content": "import React from 'react';\nimport {\n  Box,\n  PlateElement,\n  PlateElementProps,\n  Value,\n} from '@udecode/plate-common';\nimport {\n  Caption,\n  CaptionTextarea,\n  ELEMENT_IMAGE,\n  Image,\n  Resizable,\n  TImageElement,\n  useMediaState,\n} from '@udecode/plate-media';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport { cn } from '@/lib/utils';\n\nimport { MediaPopover } from './media-popover';\n\nconst align = 'center';\n\nexport function ImageElement({\n  className,\n  ...props\n}: PlateElementProps<Value, TImageElement>) {\n  const { children, nodeProps } = props;\n\n  const focused = useFocused();\n  const selected = useSelected();\n  const readOnly = useReadOnly();\n\n  useMediaState();\n\n  return (\n    <MediaPopover pluginKey={ELEMENT_IMAGE}>\n      <PlateElement className={cn('py-2.5', className)} {...props}>\n        <figure className=\"group relative m-0\" contentEditable={false}>\n          <Resizable\n            className={cn(align === 'center' && 'mx-auto')}\n            options={{\n              renderHandleLeft: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={cn(\n                    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n                    'after:flex after:h-16 after:bg-ring after:opacity-0 after:group-hover:opacity-100',\n                    \"after:w-[3px] after:rounded-[6px] after:content-['_']\",\n                    focused && selected && 'opacity-100',\n                    // variant left\n                    '-left-3 -ml-3 pl-3'\n                  )}\n                />\n              ),\n              renderHandleRight: (htmlProps) => (\n                <Box\n                  {...htmlProps}\n                  className={cn(\n                    'absolute top-0 z-10 flex h-full w-6 select-none flex-col justify-center',\n                    'after:flex after:h-16 after:bg-ring after:opacity-0 after:group-hover:opacity-100',\n                    \"after:w-[3px] after:rounded-[6px] after:content-['_']\",\n                    focused && selected && 'opacity-100',\n                    // variant right\n                    '-right-3 -mr-3 items-end pr-3'\n                  )}\n                />\n              ),\n              align,\n              readOnly,\n            }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/alt-text */}\n            <Image\n              {...nodeProps}\n              className={cn(\n                'block w-full max-w-full cursor-pointer object-cover px-0',\n                'rounded-sm',\n                focused && selected && 'ring-2 ring-ring ring-offset-2',\n                nodeProps?.className\n              )}\n            />\n          </Resizable>\n\n          <Caption\n            className={cn('max-w-full', align === 'center' && 'mx-auto')}\n          >\n            <CaptionTextarea\n              className={cn(\n                'mt-2 w-full resize-none border-none bg-inherit p-0 font-[inherit] text-inherit',\n                'focus:outline-none focus:[&::placeholder]:opacity-0',\n                'text-center'\n              )}\n              placeholder=\"Write a caption...\"\n              readOnly={readOnly}\n            />\n          </Caption>\n        </figure>\n\n        {children}\n      </PlateElement>\n    </MediaPopover>\n  );\n}\n"
    }
  ],
  "type": "components:plate-ui"
}