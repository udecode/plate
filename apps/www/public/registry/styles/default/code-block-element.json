{
  "name": "code-block-element",
  "dependencies": [
    "@udecode/plate-code-block"
  ],
  "registryDependencies": [
    "command"
  ],
  "files": [
    {
      "name": "code-block-element.tsx",
      "content": "'use client';\n\nimport './code-block-element.css';\nimport React, { forwardRef } from 'react';\nimport {\n  TCodeBlockElement,\n  useCodeBlockElementState,\n} from '@udecode/plate-code-block';\nimport { PlateElement, PlateElementProps, Value } from '@udecode/plate-common';\n\nimport { cn } from '@/lib/utils';\n\nimport { CodeBlockCombobox } from './code-block-combobox';\n\nconst CodeBlockElement = forwardRef<\n  HTMLDivElement,\n  PlateElementProps<Value, TCodeBlockElement>\n>(({ className, ...props }, ref) => {\n  const { children, element } = props;\n\n  const state = useCodeBlockElementState({ element });\n\n  return (\n    <PlateElement\n      ref={ref}\n      className={cn('relative py-1', state.className, className)}\n      {...props}\n    >\n      <pre className=\"overflow-x-auto rounded-md bg-muted px-6 py-8 font-mono text-sm leading-[normal] [tab-size:2]\">\n        <code>{children}</code>\n      </pre>\n\n      {state.syntax && (\n        <div\n          className=\"absolute right-2 top-2 z-10 select-none\"\n          contentEditable={false}\n        >\n          <CodeBlockCombobox />\n        </div>\n      )}\n    </PlateElement>\n  );\n});\nCodeBlockElement.displayName = 'CodeBlockElement';\n\nexport { CodeBlockElement };\n"
    },
    {
      "name": "code-block-element.css",
      "content": "/**\n * One Light theme for prism.js\n * Based on Atom's One Light theme: https://github.com/atom/atom/tree/master/packages/one-light-syntax\n */\n\n/**\n * One Light colours (accurate as of commit eb064bf on 19 Feb 2021)\n * From colors.less\n * --mono-1: hsl(230, 8%, 24%);\n * --mono-2: hsl(230, 6%, 44%);\n * --mono-3: hsl(230, 4%, 64%)\n * --hue-1: hsl(198, 99%, 37%);\n * --hue-2: hsl(221, 87%, 60%);\n * --hue-3: hsl(301, 63%, 40%);\n * --hue-4: hsl(119, 34%, 47%);\n * --hue-5: hsl(5, 74%, 59%);\n * --hue-5-2: hsl(344, 84%, 43%);\n * --hue-6: hsl(35, 99%, 36%);\n * --hue-6-2: hsl(35, 99%, 40%);\n * --syntax-fg: hsl(230, 8%, 24%);\n * --syntax-bg: hsl(230, 1%, 98%);\n * --syntax-gutter: hsl(230, 1%, 62%);\n * --syntax-guide: hsla(230, 8%, 24%, 0.2);\n * --syntax-accent: hsl(230, 100%, 66%);\n * From syntax-variables.less\n * --syntax-selection-color: hsl(230, 1%, 90%);\n * --syntax-gutter-background-color-selected: hsl(230, 1%, 90%);\n * --syntax-cursor-line: hsla(230, 8%, 24%, 0.05);\n */\n\ncode[class*='language-'],\npre[class*='language-'] {\n  background: hsl(230, 1%, 98%);\n  color: hsl(230, 8%, 24%);\n  font-family: 'Fira Code', 'Fira Mono', Menlo, Consolas, 'DejaVu Sans Mono',\n    monospace;\n  direction: ltr;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  line-height: 1.5;\n  -moz-tab-size: 2;\n  -o-tab-size: 2;\n  tab-size: 2;\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\n/* Selection */\ncode[class*='language-']::-moz-selection,\ncode[class*='language-'] *::-moz-selection,\npre[class*='language-'] *::-moz-selection {\n  background: hsl(230, 1%, 90%);\n  color: inherit;\n}\n\ncode[class*='language-']::selection,\ncode[class*='language-'] *::selection,\npre[class*='language-'] *::selection {\n  background: hsl(230, 1%, 90%);\n  color: inherit;\n}\n\n/* Code blocks */\npre[class*='language-'] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n  border-radius: 0.3em;\n}\n\n/* Inline code */\n:not(pre) > code[class*='language-'] {\n  padding: 0.2em 0.3em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.cdata {\n  color: hsl(230, 4%, 64%);\n}\n\n.token.doctype,\n.token.punctuation,\n.token.entity {\n  color: hsl(230, 8%, 24%);\n}\n\n.token.attr-name,\n.token.class-name,\n.token.boolean,\n.token.constant,\n.token.number,\n.token.atrule {\n  color: hsl(35, 99%, 36%);\n}\n\n.token.keyword {\n  color: hsl(301, 63%, 40%);\n}\n\n.token.property,\n.token.tag,\n.token.symbol,\n.token.deleted,\n.token.important {\n  color: hsl(5, 74%, 59%);\n}\n\n.token.selector,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted,\n.token.regex,\n.token.attr-value,\n.token.attr-value > .token.punctuation {\n  color: hsl(119, 34%, 47%);\n}\n\n.token.variable,\n.token.operator,\n.token.function {\n  color: hsl(221, 87%, 60%);\n}\n\n.token.url {\n  color: hsl(198, 99%, 37%);\n}\n\n/* HTML overrides */\n.token.attr-value > .token.punctuation.attr-equals,\n.token.special-attr > .token.attr-value > .token.value.css {\n  color: hsl(230, 8%, 24%);\n}\n\n/* CSS overrides */\n.language-css .token.selector {\n  color: hsl(5, 74%, 59%);\n}\n\n.language-css .token.property {\n  color: hsl(230, 8%, 24%);\n}\n\n.language-css .token.function,\n.language-css .token.url > .token.function {\n  color: hsl(198, 99%, 37%);\n}\n\n.language-css .token.url > .token.string.url {\n  color: hsl(119, 34%, 47%);\n}\n\n.language-css .token.important,\n.language-css .token.atrule .token.rule {\n  color: hsl(301, 63%, 40%);\n}\n\n/* JS overrides */\n.language-javascript .token.operator {\n  color: hsl(301, 63%, 40%);\n}\n\n.language-javascript\n  .token.template-string\n  > .token.interpolation\n  > .token.interpolation-punctuation.punctuation {\n  color: hsl(344, 84%, 43%);\n}\n\n/* JSON overrides */\n.language-json .token.operator {\n  color: hsl(230, 8%, 24%);\n}\n\n.language-json .token.null.keyword {\n  color: hsl(35, 99%, 36%);\n}\n\n/* MD overrides */\n.language-markdown .token.url,\n.language-markdown .token.url > .token.operator,\n.language-markdown .token.url-reference.url > .token.string {\n  color: hsl(230, 8%, 24%);\n}\n\n.language-markdown .token.url > .token.content {\n  color: hsl(221, 87%, 60%);\n}\n\n.language-markdown .token.url > .token.url,\n.language-markdown .token.url-reference.url {\n  color: hsl(198, 99%, 37%);\n}\n\n.language-markdown .token.blockquote.punctuation,\n.language-markdown .token.hr.punctuation {\n  color: hsl(230, 4%, 64%);\n  font-style: italic;\n}\n\n.language-markdown .token.code-snippet {\n  color: hsl(119, 34%, 47%);\n}\n\n.language-markdown .token.bold .token.content {\n  color: hsl(35, 99%, 36%);\n}\n\n.language-markdown .token.italic .token.content {\n  color: hsl(301, 63%, 40%);\n}\n\n.language-markdown .token.strike .token.content,\n.language-markdown .token.strike .token.punctuation,\n.language-markdown .token.list.punctuation,\n.language-markdown .token.title.important > .token.punctuation {\n  color: hsl(5, 74%, 59%);\n}\n\n/* General */\n.token.bold {\n  font-weight: bold;\n}\n\n.token.comment,\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n\n.token.namespace {\n  opacity: 0.8;\n}\n\n/* Plugin overrides */\n/* Selectors should have higher specificity than those in the plugins' default stylesheets */\n\n/* Show Invisibles plugin overrides */\n.token.token.tab:not(:empty):before,\n.token.token.cr:before,\n.token.token.lf:before,\n.token.token.space:before {\n  color: hsla(230, 8%, 24%, 0.2);\n}\n\n/* Toolbar plugin overrides */\n/* Space out all buttons and move them away from the right edge of the code block */\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item {\n  margin-right: 0.4em;\n}\n\n/* Styling the buttons */\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > button,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > a,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > span {\n  background: hsl(230, 1%, 90%);\n  color: hsl(230, 6%, 44%);\n  padding: 0.1em 0.4em;\n  border-radius: 0.3em;\n}\n\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > button:hover,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > button:focus,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > a:hover,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > a:focus,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > span:hover,\ndiv.code-toolbar > .toolbar.toolbar > .toolbar-item > span:focus {\n  background: hsl(230, 1%, 78%); /* custom: darken(--syntax-bg, 20%) */\n  color: hsl(230, 8%, 24%);\n}\n\n/* Line Highlight plugin overrides */\n/* The highlighted line itself */\n.line-highlight.line-highlight {\n  background: hsla(230, 8%, 24%, 0.05);\n}\n\n/* Default line numbers in Line Highlight plugin */\n.line-highlight.line-highlight:before,\n.line-highlight.line-highlight[data-end]:after {\n  background: hsl(230, 1%, 90%);\n  color: hsl(230, 8%, 24%);\n  padding: 0.1em 0.6em;\n  border-radius: 0.3em;\n  box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2); /* same as Toolbar plugin default */\n}\n\n/* Hovering over a linkable line number (in the gutter area) */\n/* Requires Line Numbers plugin as well */\npre[id].linkable-line-numbers.linkable-line-numbers\n  span.line-numbers-rows\n  > span:hover:before {\n  background-color: hsla(230, 8%, 24%, 0.05);\n}\n\n/* Line Numbers and Command Line plugins overrides */\n/* Line separating gutter from coding area */\n.line-numbers.line-numbers .line-numbers-rows,\n.command-line .command-line-prompt {\n  border-right-color: hsla(230, 8%, 24%, 0.2);\n}\n\n/* Stuff in the gutter */\n.line-numbers .line-numbers-rows > span:before,\n.command-line .command-line-prompt > span:before {\n  color: hsl(230, 1%, 62%);\n}\n\n/* Match Braces plugin overrides */\n/* Note: Outline colour is inherited from the braces */\n.rainbow-braces .token.token.punctuation.brace-level-1,\n.rainbow-braces .token.token.punctuation.brace-level-5,\n.rainbow-braces .token.token.punctuation.brace-level-9 {\n  color: hsl(5, 74%, 59%);\n}\n\n.rainbow-braces .token.token.punctuation.brace-level-2,\n.rainbow-braces .token.token.punctuation.brace-level-6,\n.rainbow-braces .token.token.punctuation.brace-level-10 {\n  color: hsl(119, 34%, 47%);\n}\n\n.rainbow-braces .token.token.punctuation.brace-level-3,\n.rainbow-braces .token.token.punctuation.brace-level-7,\n.rainbow-braces .token.token.punctuation.brace-level-11 {\n  color: hsl(221, 87%, 60%);\n}\n\n.rainbow-braces .token.token.punctuation.brace-level-4,\n.rainbow-braces .token.token.punctuation.brace-level-8,\n.rainbow-braces .token.token.punctuation.brace-level-12 {\n  color: hsl(301, 63%, 40%);\n}\n\n/* Diff Highlight plugin overrides */\n/* Taken from https://github.com/atom/github/blob/master/styles/variables.less */\npre.diff-highlight > code .token.token.deleted:not(.prefix),\npre > code.diff-highlight .token.token.deleted:not(.prefix) {\n  background-color: hsla(353, 100%, 66%, 0.15);\n}\n\npre.diff-highlight > code .token.token.deleted:not(.prefix)::-moz-selection,\npre.diff-highlight > code .token.token.deleted:not(.prefix) *::-moz-selection,\npre > code.diff-highlight .token.token.deleted:not(.prefix)::-moz-selection,\npre > code.diff-highlight .token.token.deleted:not(.prefix) *::-moz-selection {\n  background-color: hsla(353, 95%, 66%, 0.25);\n}\n\npre.diff-highlight > code .token.token.deleted:not(.prefix)::selection,\npre.diff-highlight > code .token.token.deleted:not(.prefix) *::selection,\npre > code.diff-highlight .token.token.deleted:not(.prefix)::selection,\npre > code.diff-highlight .token.token.deleted:not(.prefix) *::selection {\n  background-color: hsla(353, 95%, 66%, 0.25);\n}\n\npre.diff-highlight > code .token.token.inserted:not(.prefix),\npre > code.diff-highlight .token.token.inserted:not(.prefix) {\n  background-color: hsla(137, 100%, 55%, 0.15);\n}\n\npre.diff-highlight > code .token.token.inserted:not(.prefix)::-moz-selection,\npre.diff-highlight > code .token.token.inserted:not(.prefix) *::-moz-selection,\npre > code.diff-highlight .token.token.inserted:not(.prefix)::-moz-selection,\npre > code.diff-highlight .token.token.inserted:not(.prefix) *::-moz-selection {\n  background-color: hsla(135, 73%, 55%, 0.25);\n}\n\npre.diff-highlight > code .token.token.inserted:not(.prefix)::selection,\npre.diff-highlight > code .token.token.inserted:not(.prefix) *::selection,\npre > code.diff-highlight .token.token.inserted:not(.prefix)::selection,\npre > code.diff-highlight .token.token.inserted:not(.prefix) *::selection {\n  background-color: hsla(135, 73%, 55%, 0.25);\n}\n\n/* Previewers plugin overrides */\n/* Based on https://github.com/atom-community/atom-ide-datatip/blob/master/styles/atom-ide-datatips.less and https://github.com/atom/atom/blob/master/packages/one-light-ui */\n/* Border around popup */\n.prism-previewer.prism-previewer:before,\n.prism-previewer-gradient.prism-previewer-gradient div {\n  border-color: hsl(0, 0, 95%);\n}\n\n/* Angle and time should remain as circles and are hence not included */\n.prism-previewer-color.prism-previewer-color:before,\n.prism-previewer-gradient.prism-previewer-gradient div,\n.prism-previewer-easing.prism-previewer-easing:before {\n  border-radius: 0.3em;\n}\n\n/* Triangles pointing to the code */\n.prism-previewer.prism-previewer:after {\n  border-top-color: hsl(0, 0, 95%);\n}\n\n.prism-previewer-flipped.prism-previewer-flipped.after {\n  border-bottom-color: hsl(0, 0, 95%);\n}\n\n/* Background colour within the popup */\n.prism-previewer-angle.prism-previewer-angle:before,\n.prism-previewer-time.prism-previewer-time:before,\n.prism-previewer-easing.prism-previewer-easing {\n  background: hsl(0, 0%, 100%);\n}\n\n/* For angle, this is the positive area (eg. 90deg will display one quadrant in this colour) */\n/* For time, this is the alternate colour */\n.prism-previewer-angle.prism-previewer-angle circle,\n.prism-previewer-time.prism-previewer-time circle {\n  stroke: hsl(230, 8%, 24%);\n  stroke-opacity: 1;\n}\n\n/* Stroke colours of the handle, direction point, and vector itself */\n.prism-previewer-easing.prism-previewer-easing circle,\n.prism-previewer-easing.prism-previewer-easing path,\n.prism-previewer-easing.prism-previewer-easing line {\n  stroke: hsl(230, 8%, 24%);\n}\n\n/* Fill colour of the handle */\n.prism-previewer-easing.prism-previewer-easing circle {\n  fill: transparent;\n}\n"
    },
    {
      "name": "code-block-combobox.tsx",
      "content": "'use client';\n\nimport React, { useState } from 'react';\nimport {\n  CODE_BLOCK_LANGUAGES,\n  CODE_BLOCK_LANGUAGES_POPULAR,\n  useCodeBlockCombobox,\n  useCodeBlockComboboxState,\n} from '@udecode/plate-code-block';\n\nimport { cn } from '@/lib/utils';\nimport { Icons } from '@/components/icons';\n\nimport { Button } from './button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from './command';\nimport { Popover, PopoverContent, PopoverTrigger } from './popover';\n\nconst languages: { value: string; label: string }[] = [\n  { value: 'text', label: 'Plain Text' },\n  ...Object.entries({\n    ...CODE_BLOCK_LANGUAGES_POPULAR,\n    ...CODE_BLOCK_LANGUAGES,\n  }).map(([key, val]) => ({\n    value: key,\n    label: val as string,\n  })),\n];\n\nexport function CodeBlockCombobox() {\n  const state = useCodeBlockComboboxState();\n  const { commandItemProps } = useCodeBlockCombobox(state);\n\n  const [open, setOpen] = useState(false);\n\n  if (state.readOnly) return null;\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"h-5 justify-between px-1 text-xs\"\n          size=\"xs\"\n        >\n          {state.value\n            ? languages.find((language) => language.value === state.value)\n                ?.label\n            : 'Plain Text'}\n          <Icons.chevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search language...\" />\n          <CommandEmpty>No language found.</CommandEmpty>\n\n          <CommandList>\n            {languages.map((language) => (\n              <CommandItem\n                key={language.value}\n                value={language.value}\n                className=\"cursor-pointer\"\n                onSelect={(_value) => {\n                  commandItemProps.onSelect(_value);\n                  setOpen(false);\n                }}\n              >\n                <Icons.check\n                  className={cn(\n                    'mr-2 h-4 w-4',\n                    state.value === language.value ? 'opacity-100' : 'opacity-0'\n                  )}\n                />\n                {language.label}\n              </CommandItem>\n            ))}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"
    }
  ],
  "type": "components:plate-ui"
}