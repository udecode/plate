{
  "name": "toggle",
  "dependencies": [
    "@radix-ui/react-toggle"
  ],
  "registryDependencies": [],
  "files": [
    {
      "name": "toggle.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport * as TogglePrimitive from '@radix-ui/react-toggle';\nimport { VariantProps, cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst toggleVariants = cva(\n  cn(\n    'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n    '[&_svg:not([data-icon])]:h-5 [&_svg:not([data-icon])]:w-5'\n  ),\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-transparent hover:bg-muted hover:text-muted-foreground data-[state=on]:bg-accent data-[state=on]:text-accent-foreground',\n        outline:\n          'border border-input bg-transparent hover:bg-accent hover:text-accent-foreground',\n        floating: 'rounded-full bg-primary text-primary-foreground',\n      },\n      size: {\n        default: 'h-10 px-3',\n        sm: 'h-9 px-2',\n        lg: 'h-11 px-5',\n        circle: 'p-3',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport type ToggleProps = React.ComponentPropsWithoutRef<\n  typeof TogglePrimitive.Root\n> &\n  VariantProps<typeof toggleVariants>;\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  ToggleProps\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n));\n\nToggle.displayName = TogglePrimitive.Root.displayName;\n\nexport { Toggle, toggleVariants };\n"
    }
  ],
  "type": "components:plate-ui"
}